// Code generated by go-swagger; DO NOT EDIT.

package pet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"swaggerpet/api/models"
)

// GetPetByIDReader is a Reader for the GetPetByID structure.
type GetPetByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPetByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPetByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPetByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPetByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pet/{petId}] getPetById", response, response.Code())
	}
}

// NewGetPetByIDOK creates a GetPetByIDOK with default headers values
func NewGetPetByIDOK() *GetPetByIDOK {
	return &GetPetByIDOK{}
}

/*
GetPetByIDOK describes a response with status code 200, with default header values.

successful operation
*/
type GetPetByIDOK struct {
	Payload *models.Pet
}

// IsSuccess returns true when this get pet by Id o k response has a 2xx status code
func (o *GetPetByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pet by Id o k response has a 3xx status code
func (o *GetPetByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pet by Id o k response has a 4xx status code
func (o *GetPetByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pet by Id o k response has a 5xx status code
func (o *GetPetByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get pet by Id o k response a status code equal to that given
func (o *GetPetByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get pet by Id o k response
func (o *GetPetByIDOK) Code() int {
	return 200
}

func (o *GetPetByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pet/{petId}][%d] getPetByIdOK %s", 200, payload)
}

func (o *GetPetByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pet/{petId}][%d] getPetByIdOK %s", 200, payload)
}

func (o *GetPetByIDOK) GetPayload() *models.Pet {
	return o.Payload
}

func (o *GetPetByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPetByIDBadRequest creates a GetPetByIDBadRequest with default headers values
func NewGetPetByIDBadRequest() *GetPetByIDBadRequest {
	return &GetPetByIDBadRequest{}
}

/*
GetPetByIDBadRequest describes a response with status code 400, with default header values.

Invalid ID supplied
*/
type GetPetByIDBadRequest struct {
}

// IsSuccess returns true when this get pet by Id bad request response has a 2xx status code
func (o *GetPetByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pet by Id bad request response has a 3xx status code
func (o *GetPetByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pet by Id bad request response has a 4xx status code
func (o *GetPetByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pet by Id bad request response has a 5xx status code
func (o *GetPetByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get pet by Id bad request response a status code equal to that given
func (o *GetPetByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get pet by Id bad request response
func (o *GetPetByIDBadRequest) Code() int {
	return 400
}

func (o *GetPetByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] getPetByIdBadRequest", 400)
}

func (o *GetPetByIDBadRequest) String() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] getPetByIdBadRequest", 400)
}

func (o *GetPetByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPetByIDNotFound creates a GetPetByIDNotFound with default headers values
func NewGetPetByIDNotFound() *GetPetByIDNotFound {
	return &GetPetByIDNotFound{}
}

/*
GetPetByIDNotFound describes a response with status code 404, with default header values.

Pet not found
*/
type GetPetByIDNotFound struct {
}

// IsSuccess returns true when this get pet by Id not found response has a 2xx status code
func (o *GetPetByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pet by Id not found response has a 3xx status code
func (o *GetPetByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pet by Id not found response has a 4xx status code
func (o *GetPetByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pet by Id not found response has a 5xx status code
func (o *GetPetByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get pet by Id not found response a status code equal to that given
func (o *GetPetByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get pet by Id not found response
func (o *GetPetByIDNotFound) Code() int {
	return 404
}

func (o *GetPetByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] getPetByIdNotFound", 404)
}

func (o *GetPetByIDNotFound) String() string {
	return fmt.Sprintf("[GET /pet/{petId}][%d] getPetByIdNotFound", 404)
}

func (o *GetPetByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
