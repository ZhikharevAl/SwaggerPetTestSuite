// Code generated by go-swagger; DO NOT EDIT.

package pet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"swaggerpet/api/models"
)

// FindPetsByTagsReader is a Reader for the FindPetsByTags structure.
type FindPetsByTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindPetsByTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindPetsByTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFindPetsByTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pet/findByTags] findPetsByTags", response, response.Code())
	}
}

// NewFindPetsByTagsOK creates a FindPetsByTagsOK with default headers values
func NewFindPetsByTagsOK() *FindPetsByTagsOK {
	return &FindPetsByTagsOK{}
}

/*
FindPetsByTagsOK describes a response with status code 200, with default header values.

successful operation
*/
type FindPetsByTagsOK struct {
	Payload []*models.Pet
}

// IsSuccess returns true when this find pets by tags o k response has a 2xx status code
func (o *FindPetsByTagsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find pets by tags o k response has a 3xx status code
func (o *FindPetsByTagsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find pets by tags o k response has a 4xx status code
func (o *FindPetsByTagsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find pets by tags o k response has a 5xx status code
func (o *FindPetsByTagsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find pets by tags o k response a status code equal to that given
func (o *FindPetsByTagsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find pets by tags o k response
func (o *FindPetsByTagsOK) Code() int {
	return 200
}

func (o *FindPetsByTagsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pet/findByTags][%d] findPetsByTagsOK %s", 200, payload)
}

func (o *FindPetsByTagsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /pet/findByTags][%d] findPetsByTagsOK %s", 200, payload)
}

func (o *FindPetsByTagsOK) GetPayload() []*models.Pet {
	return o.Payload
}

func (o *FindPetsByTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindPetsByTagsBadRequest creates a FindPetsByTagsBadRequest with default headers values
func NewFindPetsByTagsBadRequest() *FindPetsByTagsBadRequest {
	return &FindPetsByTagsBadRequest{}
}

/*
FindPetsByTagsBadRequest describes a response with status code 400, with default header values.

Invalid tag value
*/
type FindPetsByTagsBadRequest struct {
}

// IsSuccess returns true when this find pets by tags bad request response has a 2xx status code
func (o *FindPetsByTagsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find pets by tags bad request response has a 3xx status code
func (o *FindPetsByTagsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find pets by tags bad request response has a 4xx status code
func (o *FindPetsByTagsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this find pets by tags bad request response has a 5xx status code
func (o *FindPetsByTagsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this find pets by tags bad request response a status code equal to that given
func (o *FindPetsByTagsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the find pets by tags bad request response
func (o *FindPetsByTagsBadRequest) Code() int {
	return 400
}

func (o *FindPetsByTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /pet/findByTags][%d] findPetsByTagsBadRequest", 400)
}

func (o *FindPetsByTagsBadRequest) String() string {
	return fmt.Sprintf("[GET /pet/findByTags][%d] findPetsByTagsBadRequest", 400)
}

func (o *FindPetsByTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
