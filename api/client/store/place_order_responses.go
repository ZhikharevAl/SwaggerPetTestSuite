// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"swaggerpet/api/models"
)

// PlaceOrderReader is a Reader for the PlaceOrder structure.
type PlaceOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PlaceOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPlaceOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPlaceOrderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /store/order] placeOrder", response, response.Code())
	}
}

// NewPlaceOrderOK creates a PlaceOrderOK with default headers values
func NewPlaceOrderOK() *PlaceOrderOK {
	return &PlaceOrderOK{}
}

/*
PlaceOrderOK describes a response with status code 200, with default header values.

successful operation
*/
type PlaceOrderOK struct {
	Payload *models.Order
}

// IsSuccess returns true when this place order o k response has a 2xx status code
func (o *PlaceOrderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this place order o k response has a 3xx status code
func (o *PlaceOrderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this place order o k response has a 4xx status code
func (o *PlaceOrderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this place order o k response has a 5xx status code
func (o *PlaceOrderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this place order o k response a status code equal to that given
func (o *PlaceOrderOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the place order o k response
func (o *PlaceOrderOK) Code() int {
	return 200
}

func (o *PlaceOrderOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /store/order][%d] placeOrderOK %s", 200, payload)
}

func (o *PlaceOrderOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /store/order][%d] placeOrderOK %s", 200, payload)
}

func (o *PlaceOrderOK) GetPayload() *models.Order {
	return o.Payload
}

func (o *PlaceOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPlaceOrderBadRequest creates a PlaceOrderBadRequest with default headers values
func NewPlaceOrderBadRequest() *PlaceOrderBadRequest {
	return &PlaceOrderBadRequest{}
}

/*
PlaceOrderBadRequest describes a response with status code 400, with default header values.

Invalid Order
*/
type PlaceOrderBadRequest struct {
}

// IsSuccess returns true when this place order bad request response has a 2xx status code
func (o *PlaceOrderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this place order bad request response has a 3xx status code
func (o *PlaceOrderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this place order bad request response has a 4xx status code
func (o *PlaceOrderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this place order bad request response has a 5xx status code
func (o *PlaceOrderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this place order bad request response a status code equal to that given
func (o *PlaceOrderBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the place order bad request response
func (o *PlaceOrderBadRequest) Code() int {
	return 400
}

func (o *PlaceOrderBadRequest) Error() string {
	return fmt.Sprintf("[POST /store/order][%d] placeOrderBadRequest", 400)
}

func (o *PlaceOrderBadRequest) String() string {
	return fmt.Sprintf("[POST /store/order][%d] placeOrderBadRequest", 400)
}

func (o *PlaceOrderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
